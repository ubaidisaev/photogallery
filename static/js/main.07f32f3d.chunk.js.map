{"version":3,"sources":["config.ts","api/httpClient.ts","api/ApiService.ts","context/AlbumIdsContext/AlbumIdsContext.tsx","components/PhotoGallerySelect.tsx","components/PhotoGalleryPagination.tsx","components/PhotoGalleryModal.tsx","components/PhotoGalleryItem.tsx","components/PhotoGalleryItemList.tsx","App.tsx","index.tsx"],"names":["API_URL","Http","url","config","axios","get","ApiService","gallery","data","page","albumId","AlbumIdsContext","createContext","AlbumIdsContextComponent","children","useState","isLoading","setIsLoading","albumIds","setAlbumIds","useEffect","loadAlbumIds","a","getAllPhotos","photos","map","Set","console","log","Provider","value","PhotoGallerySelect","onAlbumChange","useContext","FormControl","sx","m","minWidth","InputLabel","id","Select","labelId","onChange","event","target","autoWidth","label","MenuItem","PhotoGalleryPagination","props","Box","mt","display","justifyContent","Pagination","count","variant","shape","PhotoGalleryModal","open","onClose","modalPhotoUrl","Modal","padding","textAlign","width","margin","alt","height","src","PhotoGalleryItem","imgSrc","onDelete","onModalOpen","Card","CardActionArea","onClick","CardMedia","component","image","CardActions","Button","color","PhotoGalleryItemList","openModalClick","flexWrap","photo","index","thumbnailUrl","App","setPhotos","currentPage","setCurrentPage","isModalVisible","setIsModalVisible","photoModalUrl","setPhotoModalUrl","setAlbumId","getPhotosByAlbum","then","getPhotos","onPaginationChange","useCallback","_","Container","photoId","newGalleryPhotos","filter","render","document","getElementById"],"mappings":"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","file":"static/js/main.07f32f3d.chunk.js","sourcesContent":["export const API_URL = `https://jsonplaceholder.typicode.com`;","import axios, {  \n  AxiosRequestConfig,\n  AxiosResponse,\n} from \"axios\";\n\nexport class Http {\n  static async get<T = any, R = AxiosResponse<T>>(\n    url: string,\n    config?: AxiosRequestConfig\n  ): Promise<R> {\n    return axios.get(url, config);\n  }\n}\n","import { API_URL } from \"../config\";\nimport { Photo } from \"./ApiService.model\";\nimport { Http } from \"./httpClient\";\n\nexport class ApiService {\n  static async getAllPhotos() {\n    const gallery: Photo[] = (await Http.get(`${API_URL}/photos`)).data;\n    return gallery;\n  }\n  static async getPhotos(page = 1) {\n    const gallery: Photo[] = (\n      await Http.get(`${API_URL}/photos?_page=${page}&_limit=6`)\n    ).data;\n    return gallery;\n  }\n\n  static async getPhotosByAlbum(page = 1, albumId: string | number = 1) {\n    const gallery: Photo[] = (\n      await Http.get(\n        `${API_URL}/albums/${albumId}/photos?_page=${page}&_limit=6`\n      )\n    ).data;\n    return gallery;\n  }\n}\n","import { createContext, FC, useEffect, useState } from \"react\";\nimport { ApiService } from \"../../api/ApiService\";\nimport { AlbumIdsContextProps } from \"./models/AlbumIdsContextProps.model\";\n\nexport const AlbumIdsContext = createContext<AlbumIdsContextProps>({} as any);\n\nexport const AlbumIdsContextComponent: FC = ({ children }) => {\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [albumIds, setAlbumIds] = useState<[number]>([1]);\n\n  useEffect(() => {\n    loadAlbumIds();\n  }, []);\n\n  const loadAlbumIds = async () => {\n    try {\n      const photos = await ApiService.getAllPhotos();\n      const albumIds = photos.map(({ albumId }) => {\n        return albumId;\n      });\n      // @ts-ignore\n      setAlbumIds([...new Set(albumIds)] as [number]);\n    } catch (err) {\n      console.log(\"ERROR\", err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <AlbumIdsContext.Provider value={{ isLoading, albumIds }}>\n      {children}\n    </AlbumIdsContext.Provider>\n  );\n};\n","import { FC, useContext } from \"react\";\n\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport FormControl from \"@mui/material/FormControl\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { AlbumIdsContext } from \"../context/AlbumIdsContext\";\n\ninterface PhotoGallerySelectProps {\n  onAlbumChange: (id: string) => void;\n  albumId: string;\n}\n\nexport const PhotoGallerySelect: FC<PhotoGallerySelectProps> = ({\n  onAlbumChange,\n  albumId,\n}) => {\n  const { albumIds } = useContext(AlbumIdsContext);\n\n  const onChangeHandler = (event: SelectChangeEvent) => {\n    onAlbumChange(event.target.value);\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, minWidth: 200 }}>\n        <InputLabel id=\"demo-simple-select-autowidth-label\">\n          Album-Id\n        </InputLabel>\n        <Select\n          labelId=\"demo-simple-select-autowidth-label\"\n          id=\"demo-simple-select-autowidth\"\n          value={albumId}\n          onChange={onChangeHandler}\n          autoWidth\n          label=\"Album-Id\"\n        >\n          <MenuItem value={\"\"}></MenuItem>\n          {albumIds.map((id) => (\n            <MenuItem key={id} value={id}>\n              {id}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n};\n","import { FC } from \"react\";\nimport { Pagination, PaginationProps } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nexport const PhotoGalleryPagination: FC<PaginationProps> = (props) => {\n  return (\n    <Box mt={2} display=\"flex\" justifyContent=\"center\">\n      <Pagination\n        count={10}\n        variant=\"outlined\"\n        shape=\"rounded\"\n        {...props}\n        // onChange={(_, page) => {\n        //   setCurrentPage(page);\n        // }}\n      />\n    </Box>\n  );\n};\n","import { FC } from \"react\";\nimport { Modal, ModalProps } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\ninterface PhotoGalleryModalProps extends ModalProps {\n  modalPhotoUrl: string;\n}\n\nexport const PhotoGalleryModal: FC<Omit<PhotoGalleryModalProps, 'children'>> = ({\n  open,\n  onClose,\n  modalPhotoUrl,\n}) => {\n  return (\n    <Modal open={open} onClose={onClose}>\n      <Box sx={{ padding: 0, textAlign: \"center\", width: 600, margin: \"auto\" }}>\n        <img alt=\"modal\" width=\"600\" height=\"600\" src={modalPhotoUrl} />\n      </Box>\n    </Modal>\n  );\n};\n","import { FC } from \"react\";\nimport {\n  Button,\n  Card,\n  CardActionArea,\n  CardActions,\n  CardMedia,\n} from \"@mui/material\";\n\ntype PhotoGalleryItemProps = {\n  id: number;\n  albumId: number;\n  imgSrc: string;\n  onDelete: () => void;\n  onModalOpen: () => void;\n};\n\nexport const PhotoGalleryItem: FC<PhotoGalleryItemProps> = ({\n  imgSrc,\n  onDelete,\n  onModalOpen,\n  id,\n  albumId\n}) => {\n  return (\n    <Card sx={{ margin: 1 }}>\n      <CardActionArea onClick={onModalOpen}>\n        <CardMedia component=\"img\" height=\"150\" image={imgSrc} />\n        <b>ID-{id}</b>\n        <br />\n        <b>ALBUM-{albumId}</b>\n      </CardActionArea>\n      <CardActions>\n        <Button\n          variant=\"contained\"\n          color=\"error\"\n          sx={{ margin: \"auto\" }}\n          onClick={onDelete}\n        >\n          Delete\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n","import { FC } from \"react\";\nimport { Box } from \"@mui/system\";\nimport { PhotoGalleryItem } from \"./PhotoGalleryItem\";\nimport { Photo } from \"../api/ApiService.model\";\n\nexport interface PhotoGalleryItemListProps {\n  photos: Photo[];\n  onDelete: (id: number) => void;\n  openModalClick: (url: string) => void;\n}\n\nexport const PhotoGalleryItemList: FC<PhotoGalleryItemListProps> = ({\n  photos,\n  onDelete,\n  openModalClick,\n}) => {\n  const onDeleteClick = (id: number) => () => {\n    onDelete(id);\n  };\n  const onModalOpen = (url: string) => () => {\n    openModalClick(url);\n  };\n  return (\n    <Box sx={{ display: \"flex\", flexWrap: \"wrap\" }}>\n      {photos.map((photo, index) => (\n        <PhotoGalleryItem\n          key={photo.id}\n          onModalOpen={onModalOpen(photo.url)}\n          onDelete={onDeleteClick(photo.id)}\n          imgSrc={photo.thumbnailUrl}\n          id={photo.id}\n          albumId={photo.albumId}\n        />\n      ))}\n    </Box>\n  );\n};\n","import { useCallback, useEffect, useState } from \"react\";\n\nimport { Container } from \"@mui/material\";\nimport { PhotoGallerySelect } from \"./components/PhotoGallerySelect\";\nimport { PhotoGalleryPagination } from \"./components/PhotoGalleryPagination\";\nimport { PhotoGalleryModal } from \"./components/PhotoGalleryModal\";\nimport { PhotoGalleryItemList } from \"./components/PhotoGalleryItemList\";\nimport { ApiService } from \"./api/ApiService\";\nimport { Photo } from \"./api/ApiService.model\";\n\nfunction App() {\n  const [photos, setPhotos] = useState<Photo[]>([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [photoModalUrl, setPhotoModalUrl] = useState(\"\");\n  const [albumId, setAlbumId] = useState<string>(\"\");\n\n  useEffect(() => {\n    if(albumId) ApiService.getPhotosByAlbum(currentPage, albumId).then(setPhotos);\n    else ApiService.getPhotos(currentPage).then(setPhotos);\n  }, [currentPage, albumId]);\n\n  useEffect(() => {\n    if (photoModalUrl) setIsModalVisible(true);\n  }, [photoModalUrl]);\n\n  const onPaginationChange = useCallback((_, page) => {\n    setCurrentPage(page);\n  }, []);\n\n  const onDelete = (photoId: number) => {\n    const newGalleryPhotos = photos.filter(({ id }) => id !== photoId);\n    setPhotos(newGalleryPhotos);\n  };\n\n  const onAlbumChange = (id: string) => {\n    setAlbumId(id);\n  }\n\n  return (\n    <Container>\n      <PhotoGallerySelect albumId={albumId} onAlbumChange={onAlbumChange} />\n      <PhotoGalleryItemList\n        openModalClick={setPhotoModalUrl}\n        photos={photos}\n        onDelete={onDelete}\n      />\n      <PhotoGalleryPagination\n        page={currentPage}\n        onChange={onPaginationChange}\n      />\n      <PhotoGalleryModal\n        open={isModalVisible}\n        onClose={() => setIsModalVisible(false)}\n        modalPhotoUrl={photoModalUrl}\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","import { render } from \"react-dom\";\nimport App from \"./App\";\nimport { AlbumIdsContextComponent } from \"./context/AlbumIdsContext/AlbumIdsContext\";\n\nrender(\n  <AlbumIdsContextComponent>\n    <App />\n  </AlbumIdsContextComponent>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}